generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  roleId    Int
  Donation  Donation[]
  role      Role       @relation(fields: [roleId], references: [id])

  @@index([roleId], map: "User_roleId_fkey")
}

model Role {
  id    Int      @id @default(autoincrement())
  name  RoleType @unique
  users User[]
}

model Donator {
  id        Int        @id @default(autoincrement())
  name      String
  phone     String?
  address   String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  donations Donation[]
}

model Donation {
  id             Int              @id @default(autoincrement())
  donatorId      Int
  userId         Int
  amount         Float
  status         DonationStatus   @default(PENDING)
  paidAmount     Float            @default(0)
  balance        Float            @default(0)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  paymentMethod  String           @default("Not Done")
  bookNumber     String?
  donator        Donator          @relation(fields: [donatorId], references: [id])
  user           User             @relation(fields: [userId], references: [id])
  PaymentHistory PaymentHistory[]

  @@index([donatorId], map: "Donation_donatorId_fkey")
  @@index([userId], map: "Donation_userId_fkey")
}

model PaymentHistory {
  id         Int      @id @default(autoincrement())
  donationId Int
  amount     Float
  paidAt     DateTime @default(now())
  donation   Donation @relation(fields: [donationId], references: [id])

  @@index([donationId], map: "PaymentHistory_donationId_fkey")
}

enum RoleType {
  ADMIN
  VIEWER
}

enum DonationStatus {
  PAID
  PARTIAL
  PENDING
}
